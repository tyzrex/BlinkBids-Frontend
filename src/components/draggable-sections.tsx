"use client";

import { useState } from "react";

import { MoveIcon, PlusIcon } from "lucide-react";
/**
 * This code was generated by v0 by Vercel.
 * @see https://v0.dev/t/2VWmmTBvZdF
 */
import Link from "next/link";

import { Button } from "@/components/ui/button";
import { Card, CardContent } from "@/components/ui/card";
import { Switch } from "@/components/ui/switch";
import { Table, TableBody, TableCell, TableRow } from "@/components/ui/table";

interface Category {
  id: number;
  title: string;
  enabled: boolean;
}

export function DraggableSection() {
  const [homeSections, setHomeSections] = useState<Category[]>([
    {
      id: 1,
      title: "New Arrivals",
      enabled: true,
    },
  ]);

  const [categories, setCategories] = useState<Category[]>([
    {
      id: 1,
      title: "Wireless Earbuds",
      enabled: true,
    },
    {
      id: 2,
      title: "Summer Collection",
      enabled: false,
    },
    {
      id: 3,
      title: "Bestselling Novels",
      enabled: true,
    },
  ]);

  const handleOnDrag = (e: React.DragEvent) => {
    e.dataTransfer.setData("text/plain", e.currentTarget.textContent || "");
  };

  const handleOnDrop = (e: React.DragEvent) => {
    e.preventDefault();
    const data = e.dataTransfer.getData("text/plain");

    //check duplicate
    if (homeSections.some((section) => section.title === data)) {
      return;
    }

    setHomeSections((prev) => [
      ...prev,
      { id: prev.length + 1, title: data, enabled: true },
    ]);
    setCategories((prev) => prev.filter((category) => category.title !== data));
  };

  const handleOnDropRevert = (e: React.DragEvent) => {
    e.preventDefault();

    const data = e.dataTransfer.getData("text/plain");
    if (categories.some((category) => category.title === data)) {
      return;
    }
    setCategories((prev) => [
      ...prev,
      { id: prev.length + 1, title: data, enabled: true },
    ]);
    setHomeSections((prev) => prev.filter((section) => section.title !== data));
  };

  const handleOnDragOver = (e: React.DragEvent) => {
    e.preventDefault();
  };

  return (
    <div className="grid items-start min-h-screen w-full gap-4 ">
      <div className="flex flex-col">
        <header className="flex h-14 lg:h-[60px] items-center gap-4 border-b bg-gray-100/40 px-6 dark:bg-gray-800/40">
          <Link className="lg:hidden" href="#">
            <span className="sr-only">Home</span>
          </Link>
          <div className="flex-1">
            <h1 className="font-semibold text-lg">Homepage</h1>
          </div>
          <Button size="sm">Save changes</Button>
        </header>
        <main className="flex flex-1 flex-col gap-4 p-4 md:gap-8 md:p-6">
          <Card className="p-5">
            <CardContent className="space-y-4">
              <div className="flex items-center">
                <h2 className="font-semibold text-lg">Categories</h2>
                <Button
                  className="ml-auto rounded-full border border-gray-200 w-8 h-8 dark:border-gray-800"
                  size="sm"
                  variant="outline"
                >
                  <span className="sr-only">Add category</span>
                </Button>
              </div>
              <Card className="border shadow-none">
                <CardContent className="p-0">
                  <Table>
                    <TableBody
                      onDragOver={handleOnDragOver}
                      onDrop={handleOnDrop}
                    >
                      {homeSections.map((section, index) => (
                        <TableRow
                          key={section.id}
                          className="cursor-move"
                          draggable
                          onDragStart={handleOnDrag}
                        >
                          <TableCell className="w-8">
                            <MoveIcon className="w-4 h-4 opacity-50 cursor-move" />
                          </TableCell>
                          <TableCell className="font-semibold">
                            {section.title}
                          </TableCell>
                          <TableCell className="text-right">
                            <Switch defaultChecked={section.enabled} />
                          </TableCell>
                        </TableRow>
                      ))}
                    </TableBody>
                  </Table>
                </CardContent>
              </Card>
              <div className="flex items-center">
                <h2 className="font-semibold text-lg">Products</h2>
                <Button
                  className="ml-auto rounded-full border border-gray-200 w-8 h-8 dark:border-gray-800"
                  size="sm"
                  variant="outline"
                >
                  <PlusIcon className="w-4 h-4" />
                  <span className="sr-only">Add product</span>
                </Button>
              </div>
              <Card className="border shadow-none">
                <CardContent className="p-0">
                  <Table className="min-h-20">
                    <TableBody
                      onDragOver={handleOnDragOver}
                      onDrop={handleOnDropRevert}
                      className="h-full"
                    >
                      {categories.map((category, index) => (
                        <TableRow
                          key={category.id}
                          className="cursor-move"
                          draggable
                          onDragStart={handleOnDrag}
                        >
                          <TableCell className="w-8">
                            <MoveIcon className="w-4 h-4 opacity-50 cursor-move" />
                          </TableCell>
                          <TableCell className="font-semibold">
                            {category.title}
                          </TableCell>
                          <TableCell className="text-right">
                            <Switch defaultChecked={category.enabled} />
                          </TableCell>
                        </TableRow>
                      ))}
                    </TableBody>
                  </Table>
                </CardContent>
              </Card>
            </CardContent>
          </Card>
        </main>
      </div>
    </div>
  );
}
